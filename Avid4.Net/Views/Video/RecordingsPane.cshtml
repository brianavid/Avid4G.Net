@{
    DvbViewer.LoadAllRecordings();

    if (ViewBag.GroupTitle != null)
    {
        foreach (var recording in DvbViewer.AllRecordingsForTitle(ViewBag.GroupTitle))
        {
            var beingRecordedClass = recording.IsRecording ? "tvRecordingBeingRecorded" : "";
            <div class="videoRecording @beingRecordedClass" id="@recording.Id">
                <div class="videoRecordingInfo">
                    <div class="videoRecordingWhen">@String.Format("{0} [{1} mins]", recording.StartTime.ToString("ddd dd MMM HH:mm"), Math.Round(recording.Duration.TotalMinutes))</div>
                    <div class="videoRecordingChannel">&nbsp;@recording.Channel.Name</div>
                </div>
                <div class="videoRecordingName">
                    @recording.Title
                </div>
                <div class="videoRecordingDescription">&nbsp;</div>
            </div>
        }
    }
    else
    {
        foreach (var recordings in DvbViewer.AllRecordingsGroupedByTitle)
        {
            var lastRecording = recordings.First();
            var firstRecording = recordings.Last();
            if (recordings.Count > 1)
            {
                <div class="videoRecordingGroup" id="@firstRecording.Title">
                    <div class="videorecordinginfo">
                        <div class="videoRecordingWhen">@(firstRecording.StartTime.ToString("ddd dd MMM")) .. @(lastRecording.StartTime.ToString("dd MMM")) [@(recordings.Count)]</div>
                        <div class="videoRecordingChannel">&nbsp;@lastRecording.Channel.Name</div>
                    </div>
                    <div class="videoRecordingName">@lastRecording.Title</div>
                    <div class="videoRecordingDescription">&nbsp;</div>
                </div>
            }
            else
            {
                var beingRecordedClass = firstRecording.IsRecording ? "tvRecordingBeingRecorded" : "";
                <div class="videoRecording @beingRecordedClass" id="@firstRecording.Id">
                    <div class="videoRecordingInfo">
                        <div class="videoRecordingWhen">@String.Format("{0} [{1} mins]", firstRecording.StartTime.ToString("ddd dd MMM HH:mm"), Math.Round(firstRecording.Duration.TotalMinutes))</div>
                        <div class="videoRecordingChannel">&nbsp;@firstRecording.Channel.Name</div>
                    </div>
                    <div class="videoRecordingName">
                        @firstRecording.Title
                    </div>
                    <div class="videoRecordingDescription">&nbsp;</div>
                </div>
            }
        }
    }
}

@{
    RemotePotato.LoadAllRecordings();

    if (ViewBag.GroupTitle != null)
    {
        foreach (var recording in RemotePotato.AllRecordingsForTitle(ViewBag.GroupTitle))
        {
            <div class="videoRecording videoOldRecording" id="@recording.Id">
                <div class="videoRecordingInfo">
                    <div class="videoRecordingWhen">@String.Format("{0} [{1} mins]", recording.StartTime.ToString("ddd dd MMM HH:mm"), Math.Round(recording.Duration.TotalMinutes))</div>
                    <div class="videoRecordingChannel">&nbsp;@recording.Channel</div>
                </div>
                <div class="videoRecordingName">
                    @recording.Title
                </div>
                <div class="videoRecordingDescription">&nbsp;</div>
            </div>
        }
    }
    else
    {
        foreach (var recordings in RemotePotato.AllRecordingsGroupedByTitle)
        {
            var lastRecording = recordings.First();
            var firstRecording = recordings.Last();
            if (recordings.Count > 1)
            {
                <div class="videoRecordingGroup videoOldRecording" id="@firstRecording.Title">
                    <div class="videorecordinginfo">
                        <div class="videoRecordingWhen">@(firstRecording.StartTime.ToString("ddd dd MMM")) .. @(lastRecording.StartTime.ToString("dd MMM")) [@(recordings.Count)]</div>
                        <div class="videoRecordingChannel">&nbsp;@lastRecording.Channel</div>
                    </div>
                    <div class="videoRecordingName">@lastRecording.Title</div>
                    <div class="videoRecordingDescription">&nbsp;</div>
                </div>
            }
            else
            {
                <div class="videoRecording videoOldRecording" id="@firstRecording.Id">
                    <div class="videoRecordingInfo">
                        <div class="videoRecordingWhen">@String.Format("{0} [{1} mins]", firstRecording.StartTime.ToString("ddd dd MMM HH:mm"), Math.Round(firstRecording.Duration.TotalMinutes))</div>
                        <div class="videoRecordingChannel">&nbsp;@firstRecording.Channel</div>
                    </div>
                    <div class="videoRecordingName">
                        @firstRecording.Title
                    </div>
                    <div class="videoRecordingDescription">&nbsp;</div>
                </div>
            }
        }
    }
}


